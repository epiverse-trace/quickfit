[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 quickfit authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joshua W. Lambert. Author, maintainer. Adam Kucharski. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lambert J, Kucharski (2023). quickfit: Utility functions fitting comparing simple epidemiological models. R package version 0.0.0.9000, https://github.com/epiverse-trace/quickfit.","code":"@Manual{,   title = {quickfit: Utility functions for fitting and comparing simple epidemiological models},   author = {Joshua W. Lambert and Adam Kucharski},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://github.com/epiverse-trace/quickfit}, }"},{"path":"/index.html","id":"quickfit","dir":"","previous_headings":"","what":"Utility functions for fitting and comparing simple epidemiological models ","title":"Utility functions for fitting and comparing simple epidemiological models ","text":"quickfit provides functions estimate one two parameter functions via maximum likelihood quickfit R package help simple model fitting tasks epidemiology. quickfit developed Centre Mathematical Modelling Infectious Diseases London School Hygiene Tropical Medicine part Epiverse Initiative.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utility functions for fitting and comparing simple epidemiological models ","text":"can install development version quickfit GitHub :","code":"# check whether {pak} is installed if(!require(\"pak\")) install.packages(\"pak\") #> Loading required package: pak pak::pak(\"epiverse-trace/quickfit\") #> ℹ Loading metadata database #> ℹ Loading metadata database #> ✔ Loading metadata database ... done #> ✔ Loading metadata database ... done #>  #>   #>  #> → Will update 1 package. #> → Will update 1 package. #> → The package (0 B) is cached. #> → The package (0 B) is cached. #> + quickfit 0.0.0.9000 → 0.0.0.9000 👷🏿‍♀️🔧 (GitHub: 5d11e96) #> + quickfit 0.0.0.9000 → 0.0.0.9000 👷🏿‍♀️🔧 (GitHub: 5d11e96) #> ℹ No downloads are needed, 1 pkg is cached #> ℹ No downloads are needed, 1 pkg is cached #> ✔ Got quickfit 0.0.0.9000 (source) (27.92 kB) #> ✔ Got quickfit 0.0.0.9000 (source) (27.92 kB) #> ℹ Packaging quickfit 0.0.0.9000 #> ℹ Packaging quickfit 0.0.0.9000 #> ✔ Packaged quickfit 0.0.0.9000 (567ms) #> ✔ Packaged quickfit 0.0.0.9000 (567ms) #> ℹ Building quickfit 0.0.0.9000 #> ℹ Building quickfit 0.0.0.9000 #> ✔ Built quickfit 0.0.0.9000 (1.4s) #> ✔ Built quickfit 0.0.0.9000 (1.4s) #> ✔ Installed quickfit 0.0.0.9000 (github::epiverse-trace/quickfit@5d11e96) (41ms) #> ✔ Installed quickfit 0.0.0.9000 (github::epiverse-trace/quickfit@5d11e96) (41ms) #> ✔ 1 pkg + 12 deps: kept 10, upd 1, dld 1 (NA B) [14.6s] #> ✔ 1 pkg + 12 deps: kept 10, upd 1, dld 1 (NA B) [14.6s]"},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Utility functions for fitting and comparing simple epidemiological models ","text":"examples illustrate current functionalities: Generate simulated data, define likelihood, estimate MLE, MLE 95% confidence interval based profile likelihood: Additionally, multiple distribution models can compared (censored non-censored data).","code":"library(quickfit) sim_data <- rnorm(50, 4, 2)  # Define likelihood function log_l <- function(x,a,b) dnorm(x, a, b, log = TRUE)  # Estimate MLE estimate_mle(log_l, sim_data, n_param = 2, a_initial = 3, b_initial = 1) #> $estimate #>        a        b  #> 4.103950 1.838315  #>  #> $log_likelihood #> [1] -101.392  # Estimate 95% CI based on profile likelihood calculate_profile(   log_l,    data_in = sim_data,    n_param = 2,    a_initial = 3,    b_initial = 1,    precision = 0.01 ) #> $estimate #>        a        b  #> 4.103950 1.838315  #>  #> $profile_out #>       a1       a2       b1       b2  #> 3.588357 4.628357 1.528099 2.272617 multi_fitdist(   data = rlnorm(n = 100, meanlog = 1, sdlog = 1),    models = c(\"lnorm\", \"gamma\", \"weibull\") ) #>    models    loglik      aic      bic #> 1   lnorm -264.0081 532.0161 537.2265 #> 2 weibull -272.9079 549.8158 555.0262 #> 3   gamma -272.9284 549.8568 555.0672"},{"path":"/index.html","id":"help","dir":"","previous_headings":"","what":"Help","title":"Utility functions for fitting and comparing simple epidemiological models ","text":"report bug please open issue","code":""},{"path":"/index.html","id":"contributions","dir":"","previous_headings":"Help","what":"Contributions","title":"Utility functions for fitting and comparing simple epidemiological models ","text":"Contributions welcome via pull requests.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"Help","what":"Code of Conduct","title":"Utility functions for fitting and comparing simple epidemiological models ","text":"Please note quickfit project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/reference/calc_aic.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the Akaike information criterion for the loglikelihood of a two\nparameter probability distribution — calc_aic","title":"Calculates the Akaike information criterion for the loglikelihood of a two\nparameter probability distribution — calc_aic","text":"Calculates Akaike information criterion loglikelihood two parameter probability distribution","code":""},{"path":"/reference/calc_aic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the Akaike information criterion for the loglikelihood of a two\nparameter probability distribution — calc_aic","text":"","code":"calc_aic(loglik)"},{"path":"/reference/calc_aic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the Akaike information criterion for the loglikelihood of a two\nparameter probability distribution — calc_aic","text":"loglik vector single number loglikelihood model","code":""},{"path":"/reference/calc_aic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the Akaike information criterion for the loglikelihood of a two\nparameter probability distribution — calc_aic","text":"single vector numerics equal input vector length","code":""},{"path":"/reference/calc_aic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the Akaike information criterion for the loglikelihood of a two\nparameter probability distribution — calc_aic","text":"","code":"calc_aic(loglik = -110) #> [1] 224"},{"path":"/reference/calc_bic.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the Bayesian information criterion for the loglikelihood of a two\nparameter probability distribution — calc_bic","title":"Calculates the Bayesian information criterion for the loglikelihood of a two\nparameter probability distribution — calc_bic","text":"Calculates Bayesian information criterion loglikelihood two parameter probability distribution","code":""},{"path":"/reference/calc_bic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the Bayesian information criterion for the loglikelihood of a two\nparameter probability distribution — calc_bic","text":"","code":"calc_bic(loglik, data)"},{"path":"/reference/calc_bic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the Bayesian information criterion for the loglikelihood of a two\nparameter probability distribution — calc_bic","text":"loglik vector single number loglikelihood model data numeric vector values","code":""},{"path":"/reference/calc_bic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the Bayesian information criterion for the loglikelihood of a two\nparameter probability distribution — calc_bic","text":"single vector numerics equal input vector length","code":""},{"path":"/reference/calc_bic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the Bayesian information criterion for the loglikelihood of a two\nparameter probability distribution — calc_bic","text":"","code":"library(coarseDataTools) data(\"nycH1N1\") calc_bic(loglik = -110, data = nycH1N1) #> [1] 229.7957"},{"path":"/reference/calculate_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate profile likelihood and 95% CI — calculate_profile","title":"Estimate profile likelihood and 95% CI — calculate_profile","text":"function estimate profile likelihood 95% CI one two parameter model","code":""},{"path":"/reference/calculate_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate profile likelihood and 95% CI — calculate_profile","text":"","code":"calculate_profile(   log_likelihood,   data_in,   n_param,   a_initial,   b_initial = NULL,   precision = 0.01 )"},{"path":"/reference/calculate_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate profile likelihood and 95% CI — calculate_profile","text":"log_likelihood Log-likelihood function form function(x,) (one parameter model) function(x,,b) (two parameter model) data_in Vector observations evaluated log_likelihood, overall likelihood given sum(log_likelihood) n_param Number parameters log_likelihood model a_initial Initial guess parameter b_initial Initial guess parameter b (two parameter model, otherwise default NULL) precision Parameter defining fine-scale grid search profile likelihood","code":""},{"path":"/reference/calculate_profile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate profile likelihood and 95% CI — calculate_profile","text":"Adam Kucharski, Joshua W. Lambert","code":""},{"path":"/reference/calculate_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate profile likelihood and 95% CI — calculate_profile","text":"","code":"# example of a one parameter model data_in <- rnorm(n = 100, mean = 1, sd = 2) log_likelihood <- function(x,a) dnorm(x, a, 2, log = TRUE) n_param <- 1 a_initial <- 0.5  calculate_profile(   log_likelihood = log_likelihood,   data_in = data_in,   n_param = 1,   a_initial = 4,   precision = 0.1 ) #> $estimate #> [1] 1.140657 #>  #> $profile_out #>        a1        a2  #> 0.7486638 1.5326494  #>   # examle of a two parameter model data_in <- rnorm(n = 100, mean = 1, sd = 1) log_likelihood <- function(x,a,b) dnorm(x, a, b, log = TRUE) n_param <- 2 a_initial <- 0.5 b_initial <- 1  calculate_profile(   log_likelihood = log_likelihood,   data_in = data_in,   n_param = 2,   a_initial = 4,   b_initial = 2,   precision = 0.1 ) #> $estimate #>         a         b  #> 1.2915576 0.9798095  #>  #> $profile_out #>        a1        a2        b1        b2  #> 1.1009571 1.5009571 0.8475353 1.1120838  #>"},{"path":"/reference/estimate_mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the maximum-likelihood estimate for a given likelihood function — estimate_mle","title":"Calculates the maximum-likelihood estimate for a given likelihood function — estimate_mle","text":"function calculates maximum-likelihood estimate one two parameter model","code":""},{"path":"/reference/estimate_mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the maximum-likelihood estimate for a given likelihood function — estimate_mle","text":"","code":"estimate_mle(log_likelihood, data_in, n_param, a_initial, b_initial = NULL)"},{"path":"/reference/estimate_mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the maximum-likelihood estimate for a given likelihood function — estimate_mle","text":"log_likelihood Log-likelihood function form function(x, ) (one parameter model) function(x, , b) (two parameter model) data_in Vector observations evaluated log_likelihood, overall likelihood given sum(log_likelihood) n_param Number parameters log_likelihood model a_initial Initial guess parameter b_initial Initial guess parameter b (two parameter model, otherwise default NULL)","code":""},{"path":"/reference/estimate_mle.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculates the maximum-likelihood estimate for a given likelihood function — estimate_mle","text":"Adam Kucharski, Joshua W. Lambert","code":""},{"path":"/reference/estimate_mle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the maximum-likelihood estimate for a given likelihood function — estimate_mle","text":"","code":"# example for a one parameter model sim_data <- rnorm(100, 5, 2) log_likelihood <- function(x, a) dnorm(x, a, 2, log = TRUE) a_initial <- 4  estimate_mle(   log_likelihood = log_likelihood,   data_in = sim_data,   n_param = 1,   a_initial = 1 ) #> $estimate #> [1] 4.902307 #>  #> $log_likelihood #> [1] -203.4434 #>   # example for a two parameter model sim_data <- rnorm(100, 5, 2) log_likelihood <- function(x, a, b) dnorm(x, a, b, log = TRUE) a_initial <- 4 b_initial <- 1  estimate_mle(   log_likelihood = log_likelihood,   data_in = sim_data,   n_param = 2,   a_initial = 1,   b_initial = 1 ) #> $estimate #>        a        b  #> 4.965056 1.935975  #>  #> $log_likelihood #> [1] -207.9395 #>"},{"path":"/reference/fit_cdt_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits probability distributions using coarseDataTools::dic.fit() — fit_cdt_dist","title":"Fits probability distributions using coarseDataTools::dic.fit() — fit_cdt_dist","text":"Fits probability distributions using coarseDataTools::dic.fit()","code":""},{"path":"/reference/fit_cdt_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits probability distributions using coarseDataTools::dic.fit() — fit_cdt_dist","text":"","code":"fit_cdt_dist(data, models)"},{"path":"/reference/fit_cdt_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits probability distributions using coarseDataTools::dic.fit() — fit_cdt_dist","text":"data numeric vector values models character string vector character strings specifying names candidate models. follows R naming convention distributions, density function d[name].","code":""},{"path":"/reference/fit_cdt_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits probability distributions using coarseDataTools::dic.fit() — fit_cdt_dist","text":"data frame models","code":""},{"path":"/reference/fit_cdt_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fits probability distributions using coarseDataTools::dic.fit() — fit_cdt_dist","text":"","code":"library(coarseDataTools) data(\"nycH1N1\") fit_cdt_dist(data = nycH1N1, models = c(\"lnorm\", \"weibull\")) #> Computing Asymptotic Confidence Intervals  #> Computing Asymptotic Confidence Intervals  #>    models    loglik      aic      bic #> 1 weibull -11.05780 26.11559 31.91127 #> 2   lnorm -11.12648 26.25297 32.04865"},{"path":"/reference/goodness_of_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the goodness-of-fit statistics for the fitted distributions — goodness_of_fit","title":"Calculates the goodness-of-fit statistics for the fitted distributions — goodness_of_fit","text":"Calculates goodness--fit statistics fitted distributions","code":""},{"path":"/reference/goodness_of_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the goodness-of-fit statistics for the fitted distributions — goodness_of_fit","text":"","code":"goodness_of_fit(data, models)"},{"path":"/reference/goodness_of_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the goodness-of-fit statistics for the fitted distributions — goodness_of_fit","text":"data numeric vector values models character string vector character strings specifying names candidate models. follows R naming convention distributions, density function d[name].","code":""},{"path":"/reference/goodness_of_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the goodness-of-fit statistics for the fitted distributions — goodness_of_fit","text":"gofstat.fitdist object {fitdistrplus} package","code":""},{"path":"/reference/goodness_of_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the goodness-of-fit statistics for the fitted distributions — goodness_of_fit","text":"","code":"goodness_of_fit(   data = rgamma(n = 100, shape = 1, scale = 1),   models = c('gamma', 'weibull', 'lnorm') ) #> Goodness-of-fit statistics #>                                   gamma    weibull     lnorm #> Kolmogorov-Smirnov statistic 0.08648613 0.08946459 0.1079355 #> Cramer-von Mises statistic   0.05753267 0.06242045 0.3976591 #> Anderson-Darling statistic   0.34086419 0.41044052 2.5463918 #>  #> Goodness-of-fit criteria #>                                   gamma  weibull    lnorm #> Akaike's Information Criterion 207.3014 208.3242 237.4496 #> Bayesian Information Criterion 212.5118 213.5345 242.6600"},{"path":"/reference/multi_fitdist.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum likelihood fitting of multiple distributions — multi_fitdist","title":"Maximum likelihood fitting of multiple distributions — multi_fitdist","text":"Maximum likelihood fitting multiple distributions","code":""},{"path":"/reference/multi_fitdist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum likelihood fitting of multiple distributions — multi_fitdist","text":"","code":"multi_fitdist(data, models)"},{"path":"/reference/multi_fitdist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum likelihood fitting of multiple distributions — multi_fitdist","text":"data numeric vector values models character string vector character strings specifying names candidate models. follows R naming convention distributions, density function d[name].","code":""},{"path":"/reference/multi_fitdist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum likelihood fitting of multiple distributions — multi_fitdist","text":"data frame models","code":""},{"path":"/reference/multi_fitdist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum likelihood fitting of multiple distributions — multi_fitdist","text":"","code":"multi_fitdist(   data = rgamma(n = 100, shape = 1, scale = 1),   models = c(\"gamma\", \"weibull\", \"lnorm\") ) #>    models    loglik      aic      bic #> 1   gamma -87.86222 179.7244 184.9348 #> 2 weibull -87.95840 179.9168 185.1271 #> 3   lnorm -98.44804 200.8961 206.1064"}]
